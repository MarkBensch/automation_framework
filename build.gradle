
group 'com.example'
version '0.1-SNAPSHOT'

import org.gradle.internal.os.OperatingSystem
apply plugin: 'groovy'



ext {
	groovyVersion = '2.4.11'
    driverVersion = '3.5.3'
    gechoVersion = "v0.18.0"
    log4jVersion = '2.8.2'
	spockReportVersion = '1.2.12'
	spockVersion = '1.1-groovy-2.4-rc-2'
	gebVersion = '1.1.1'
}

repositories {
    mavenCentral()
}

dependencies {

// Language
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"

// Fancy Reports
    testCompile( "com.athaydes:spock-reports:$spockReportVersion" ) {
        transitive = false // this avoids affecting your version of Groovy/Spock
    }

// Logger
    testCompile 'org.slf4j:slf4j-simple:1.7.13'
    testCompile "org.apache.logging.log4j:log4j-core:$log4jVersion"
    testCompile "org.apache.logging.log4j:log4j-api:$log4jVersion"

// Test Runners
    testCompile "junit:junit:4.11"
    testCompile "org.spockframework:spock-core:$spockVersion"

// API Frameworks
    testCompile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"

// webdriver framework
    testCompile "org.gebish:geb-spock:$gebVersion"
//    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$driverVersion"
	testCompile "org.seleniumhq.selenium:selenium-safari-driver:$driverVersion"
//	testCompile 'org.seleniumhq.selenium:htmlunit-driver:2.27' //Never uncomment this code as it will infect and destroy all your hopes and dreams as everything will be unit driver... no choices and no fucks given!!!

}

//run tests with JUnit categories
task fastTest(type: Test){
    useJUnit {
        includeCategories 'package.name.of.class.FastTests'
    }
}
task unzipGeckoDriver(type: Copy) {
	//https://github.com/mozilla/geckodriver/releases
	def outputDir = file("$buildDir/webdriver/geckodriver")
	outputs.dir(outputDir)
	if( OperatingSystem.current().isWindows()){
		from(zipTree("drivers/geckodriver-${gechoVersion}-win64.zip"))
	} else {
		from(tarTree("drivers/geckodriver-${gechoVersion}-macos.tar.gz"))
	}
	into(outputDir)
	println name
}


//modify all testing tasks
tasks.withType(Test) {
    testLogging {
        events 'started', 'passed'
    }
	reports {
		html.destination = reporting.file("$name/tests")
		junitXml.destination = file("$buildDir/test-results/$name")
	}
	println name
	systemProperty("geb.env", "Firefox")
	outputs.upToDateWhen { false }
    //maxParallelForks = 2
    //forkEvery = 2
}

task firefoxTest(type: Test) {
    dependsOn unzipGeckoDriver
    def geckodriverFilename = OperatingSystem.current().isWindows() ? "geckodriver.exe" : "geckodriver"
    def geckodriverFile = new File(unzipGeckoDriver.outputs.files.singleFile, geckodriverFilename)
    systemProperty("webdriver.gecko.driver", geckodriverFile.absolutePath)
	systemProperty("geb.env", "Firefox")
}

task safariTest(type: Test) {
	if (!OperatingSystem.current().isMacOsX()) {
		throw new GradleException('this is not a mac.\nNo Safari available to run')
	}
	systemProperty("geb.env", "Safari")
}
