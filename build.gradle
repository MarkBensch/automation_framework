
group 'com.example'
version '0.1-SNAPSHOT'
import org.gradle.internal.os.OperatingSystem
apply plugin: 'groovy'

repositories {
    mavenCentral()
}

dependencies {

// Language
    compile 'org.codehaus.groovy:groovy-all:2.3.11'

// Fancy Reports
    testCompile( 'com.athaydes:spock-reports:1.2.12' ) {
        transitive = false // this avoids affecting your version of Groovy/Spock
    }

// Logger
    testCompile 'org.slf4j:slf4j-simple:1.7.13'

// Test Runners
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4-rc-2"

// Frameworks
    testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'

// webdriver framework
    testCompile 'org.gebish:geb-core:1.1.1'
}

//run tests with JUnit categories
task fastTest(type: Test){
    useJUnit {
        includeCategories 'package.name.of.class.FastTests'
    }
}

//modify all testing tasks
tasks.withType(Test) {
    testLogging {
        events 'started', 'passed'
    }
    outputs.upToDateWhen { false }
    maxParallelForks = 2
    //forkEvery = 2
}

task unzipGeckoDriver(type: Copy) {
    def driverVersion = "v0.18"
    def outputDir = file("$buildDir/webdriver/geckodriver")
    outputs.dir(outputDir)
    if( OperatingSystem.current().isWindows()){
        from(zipTree("drivers/geckodriver-${driverVersion}-win64.zip"))
    } else {
        from(zipTree("drivers/geckodriver-${driverVersion}-macos.tar.gz"))
    }
    into(outputDir)
}

firefoxTest (type: Test) {
    dependsOn unzipGeckoDriver
    def geckodriverFilename = OperatingSystem.isWindows() ? "geckodriver.exe" : "geckodriver"
    def geckodriverFile = new File(unzipGeckoDriver.outputs.files.singleFile, geckodriverFilename)
    systemProperty("webdriver.gecko.driver", geckodriverFile.absolutePath)

}